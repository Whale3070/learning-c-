#include <conio.h>
#include <iostream>
#include <windows.h>
#include <stdio.h>
#pragma comment(linker, "/subsystem:windows /ENTRY:mainCRTStartup")
using namespace std;
bool systemShutDown();
 
VOID CALLBACK myxdd(HWND hWnd,UINT nMsg,UINT nIDEvent,DWORD dwTime){
	SYSTEMTIME sys;
	GetLocalTime( &sys );
	if (sys.wHour == 16)
		{
		MessageBox(NULL,"windows已遇到关键问题，将在一分钟后自动重启。请立即保存您的工作。","您将要被注销",MB_OK|MB_ICONWARNING);
		systemShutDown();
		Sleep(4900);
		}
	else{ 
		Sleep(60000); 
		}
}
 
int main(int argc, char* argv[]){
    MSG Msg;
	SetTimer(NULL,1,60000,myxdd);
	  while(GetMessage(&Msg, NULL, 0, 0)){
        DispatchMessage(&Msg);
    }
  
    KillTimer(NULL,1);
    return(0);
}

bool systemShutDown()
{
    HANDLE hToken;

    TOKEN_PRIVILEGES tkp;


    //获取进程标志
    if (!OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken)) {
        return false;

    }
    //获取关机特权的LUID
    LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME, &tkp.Privileges[0].Luid);
    tkp.PrivilegeCount = 1;

    tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;


    //获取这个进程的关机特权
    AdjustTokenPrivileges(hToken, false, &tkp, 0, (PTOKEN_PRIVILEGES)NULL, 0);
    if (GetLastError() != ERROR_SUCCESS) {
        return false;

    }


    // 强制关闭计算机
    if ( !ExitWindowsEx(EWX_SHUTDOWN | EWX_FORCE, 0)) {
        return false;
    }
    return true;
/*
    // 强制重启计算机
     if ( !ExitWindowsEx(EWX_REBOOT| EWX_FORCE, 0))
           return false;
     return true;
*/
 } 
